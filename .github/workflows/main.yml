name: Publish
on:
  push:
    branches:
      - "main"

jobs:
  build:
    outputs:
      version_changed: ${{ steps.set_version.outputs.changed }}
      version: ${{ steps.set_version.outputs.value }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1

      - run: bun i --frozen-lockfile
        env:
          HUSKY: 0
      - run: bun run build
        env:
          BUILD_MODE: deployment
      - run: bun run test
      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist
            README.md
            package.json
      - name: set output - version
        id: set_version
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PKG_VERSION=$(jq -r .version package.json)
          LATEST_VERSION=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "none")

          if [[ "v$PKG_VERSION" != "$LATEST_VERSION" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          echo "value=$PKG_VERSION" >> $GITHUB_OUTPUT

  json:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.version_changed == 'true'
    permissions:
      packages: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          version: 7

      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: .

      - run: npm run json

      - name: Download latest release json files
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release download --pattern "*.json" --dir latest_json

      - name: Compare json files
        run: |
          if diff -Zq json/ latest_json/; then
              echo "JSON_CHANGED=false" >> $GITHUB_ENV
          else
              echo "JSON_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Create Release
        if: env.JSON_CHANGED == 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "json/*"
          tag: v${{ needs.build.outputs.version }}

  docs:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
      - uses: ts-graphviz/setup-graphviz@v2

      - run: bun i --frozen-lockfile
        env:
          HUSKY: 0
      - run: bun run docs

      - name: Generate dependency graph
        run: |
          node ./tools/dep-graph.js | dot -Tpng -o docs/graph.png

      - name: Upload docs artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: "github-pages"
          path: "docs"

      - name: Deploy docs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.version_changed == 'true'
    steps:
      - uses: actions/setup-node@v3
        with:
          registry-url: "https://registry.npmjs.org"

      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: .

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: |
          curl -XPOST -u "${{secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/GooseOb/taraskevizatar/actions/workflows/build.yml/dispatches --data '{"ref": "main"}'
